[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(C:\Users\Maxim\Desktop\Projects\scalaUniversity\laba1\src\main\scala\Animal.scala, C:\Users\Maxim\Desktop\Projects\scalaUniversity\laba1\src\main\scala\Patterns.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(Animal)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(Animal)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(C:\Users\Maxim\Desktop\Projects\scalaUniversity\laba1\src\main\scala\Animal.scala, C:\Users\Maxim\Desktop\Projects\scalaUniversity\laba1\src\main\scala\Patterns.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Animal[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources to C:\Users\Maxim\Desktop\Projects\scalaUniversity\laba1\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.5:compile for Scala 2.12.10[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.5:compile for Scala 2.12.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 2ddf18be for Scala compiler version 2.12.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jre1.8.0_241\lib\resources.jar;C:\Program Files\Java\jre1.8.0_241\lib\rt.jar;C:\Program Files\Java\jre1.8.0_241\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_241\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_241\lib\jce.jar;C:\Program Files\Java\jre1.8.0_241\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_241\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_241\classes;C:\Users\Maxim\.sbt\boot\scala-2.12.10\lib\scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\Maxim\Desktop\Projects\scalaUniversity\laba1\target\scala-2.12\classes[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 3.051923201 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Scissor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Scissor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Scissor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Scissor,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Scissor,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Scissor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Scissor,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Scissor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Vegetables...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Vegetables[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Vegetables)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Vegetables,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(Vegetables,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Vegetables has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(Vegetables,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Vegetables)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Fish...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Fish[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Fish)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Fish,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Fish,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(exercise1;PatternMatching;Fish;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(copy$default$1,[Default]), UsedName(food,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Fish has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Fish,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(exercise1;PatternMatching;Fish;init;,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(copy$default$1,[Default]), UsedName(food,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Fish)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Lose...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Lose[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Lose)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Lose,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(Lose,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Lose has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(Lose,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Lose)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Result...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Draw by exercise1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Lose by exercise1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Win by exercise1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Lose, exercise1.PatternMatching.Draw, exercise1.PatternMatching.Win, exercise1.PatternMatching.Result)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Result,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(Result,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 4 classes due to The exercise1.PatternMatching.Result has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(Result,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Lose, exercise1.PatternMatching.Draw, exercise1.PatternMatching.Win, exercise1.PatternMatching.Result)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Paper...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Paper[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Paper)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Paper,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Paper,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Paper has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Paper,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Paper)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Rock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Rock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Rock)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Rock,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(Rock,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Rock has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(Rock,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Rock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Hand...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Paper by exercise1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Scissor by exercise1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Rock by exercise1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Paper, exercise1.PatternMatching.Hand, exercise1.PatternMatching.Rock, exercise1.PatternMatching.Scissor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Hand,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Hand,[Default]))) invalidates 4 classes due to The exercise1.PatternMatching.Hand has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Hand,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Paper, exercise1.PatternMatching.Hand, exercise1.PatternMatching.Rock, exercise1.PatternMatching.Scissor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching,ModifiedNames(changes = UsedName(testWinsA,[Default]), UsedName(wait,[Default]), UsedName(testUpdateFood,[Default]), UsedName(testIsEven,[Default]), UsedName(Mammal,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Fish,[Default]), UsedName(isEven,[Default]), UsedName(Paper,[Default]), UsedName(eq,[Default]), UsedName(Plants,[Default]), UsedName(testIsMaxAndMoritz,[Default]), UsedName(getClass,[Default]), UsedName(Lose,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(Meat,[Default]), UsedName(notifyAll,[Default]), UsedName(Vegetables,[Default]), UsedName(Win,[Default]), UsedName(IsMaxAndMoritz,[Default]), UsedName(retWeight,[Default]), UsedName(winsA,[Default]), UsedName(Draw,[Default]), UsedName(testIntToString,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Scissor,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(aTask,[Default]), UsedName(!=,[Default]), UsedName(Result,[Default]), UsedName(Rock,[Default]), UsedName(Bird,[Default]), UsedName(PatternMatching,[Default]), UsedName(change,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Animal,[Default]), UsedName(testExtractMammalWeight,[Default]), UsedName(Food,[Default]), UsedName(Hand,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(testWinsA,[Default]), UsedName(wait,[Default]), UsedName(testUpdateFood,[Default]), UsedName(testIsEven,[Default]), UsedName(Mammal,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Fish,[Default]), UsedName(isEven,[Default]), UsedName(Paper,[Default]), UsedName(eq,[Default]), UsedName(Plants,[Default]), UsedName(testIsMaxAndMoritz,[Default]), UsedName(getClass,[Default]), UsedName(Lose,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(Meat,[Default]), UsedName(notifyAll,[Default]), UsedName(Vegetables,[Default]), UsedName(Win,[Default]), UsedName(IsMaxAndMoritz,[Default]), UsedName(retWeight,[Default]), UsedName(winsA,[Default]), UsedName(Draw,[Default]), UsedName(testIntToString,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Scissor,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(aTask,[Default]), UsedName(!=,[Default]), UsedName(Result,[Default]), UsedName(Rock,[Default]), UsedName(Bird,[Default]), UsedName(PatternMatching,[Default]), UsedName(change,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Animal,[Default]), UsedName(testExtractMammalWeight,[Default]), UsedName(Food,[Default]), UsedName(Hand,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Food...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Plants by exercise1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Meat by exercise1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Vegetables by exercise1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Plants, exercise1.PatternMatching.Food, exercise1.PatternMatching.Vegetables, exercise1.PatternMatching.Meat)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Food,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Food,[Default]))) invalidates 4 classes due to The exercise1.PatternMatching.Food has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Food,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Plants, exercise1.PatternMatching.Food, exercise1.PatternMatching.Vegetables, exercise1.PatternMatching.Meat)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Plants...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Plants[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Plants)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Plants,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(Plants,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Plants has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(Plants,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Plants)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Draw...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Draw[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Draw)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Draw,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(Draw,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Draw has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(Draw,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Draw)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Animal...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Animal[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Mammal by exercise1.PatternMatching.Animal[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Bird by exercise1.PatternMatching.Animal[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Fish by exercise1.PatternMatching.Animal[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Fish, exercise1.PatternMatching.Mammal, exercise1.PatternMatching.Bird, exercise1.PatternMatching.Animal)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Animal,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(name,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(food,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Animal,[Default]))) invalidates 4 classes due to The exercise1.PatternMatching.Animal has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(name,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(food,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Animal,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Fish, exercise1.PatternMatching.Mammal, exercise1.PatternMatching.Bird, exercise1.PatternMatching.Animal)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Meat...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Meat[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Meat)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Meat,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(Meat,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Meat has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(Meat,[Default]), UsedName(notifyAll,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Meat)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Animal...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Animal[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Animal)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Animal,ModifiedNames(changes = UsedName(Animal;init;,[Default]), UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(cat,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(hashCode,[Default]), UsedName(eats,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(parrot,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Animal,[Default]), UsedName(goldfish,[Default]))) invalidates 1 classes due to The Animal has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Animal;init;,[Default]), UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(cat,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(hashCode,[Default]), UsedName(eats,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(parrot,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Animal,[Default]), UsedName(goldfish,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Animal)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Bird...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Bird[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Bird)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Bird,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(exercise1;PatternMatching;Bird;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(Bird,[Default]), UsedName(copy$default$1,[Default]), UsedName(food,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Bird has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(exercise1;PatternMatching;Bird;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(Bird,[Default]), UsedName(copy$default$1,[Default]), UsedName(food,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Bird)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Win...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Win[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Win)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Win,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(Win,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Win has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(Win,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Win)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Mammal...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Mammal[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Mammal)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Mammal,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(Mammal,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(exercise1;PatternMatching;Mammal;init;,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(weight,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(copy$default$1,[Default]), UsedName(food,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Mammal has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(wait,[Default]), UsedName(canEqual,[Default]), UsedName(Mammal,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]), UsedName(exercise1;PatternMatching;Mammal;init;,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(weight,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(name,[Default]), UsedName(hashCode,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(copy$default$1,[Default]), UsedName(food,[Default]), UsedName(productIterator,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Mammal)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
